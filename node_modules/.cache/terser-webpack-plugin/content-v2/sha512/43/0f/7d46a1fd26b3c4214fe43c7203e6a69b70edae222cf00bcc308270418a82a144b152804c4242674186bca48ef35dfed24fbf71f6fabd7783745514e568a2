{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{644:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"AppointmentEditorPanelV2\",function(){return f});var i=n(0),a=n(6),p=n(3),s=n(10),r=n(4),o=n(2),m=n(8),c=n(182),l=n(21),h=n(98),d=n(169),u=n(178),b=n(173),E=n(185),g=n(177),y=n(175),O=n(62),S=n(95),j=n(1);let f=class extends j.Component{constructor(){super(...arguments),this.timerInputs=[],this.timeComb={hours:this.calcTime.hours,minutes:this.calcTime.minutes,am:this.calcTime.am}}get patient(){return s.eb.list.find(e=>e._id===this.props.appointment.patientID)}get patientInsurance(){const{appointment:e}=this.props,t=s.eb.list.find(t=>e&&t._id===e.patientID);return t?t.insurance:null}get calcTime(){if(!this.props.appointment)return{hours:12,minutes:\"00\",am:!1};const e=new Date(this.props.appointment.date).toLocaleTimeString(\"en-US\");return{hours:Number(e.split(\":\")[0]),minutes:Number(e.split(\":\")[1])<30?\"00\":\"30\",am:\"am\"===e.replace(/[^A-Z]/gi,\"\").toLowerCase()}}get otherAppointmentsNumber(){const e=this.props.appointment;return e?s.K.appointmentsForDay(e.date,0,0).filter(t=>t._id!==e._id).length:[].length-1}get treatmentOptions(){const e=JSON.parse(JSON.stringify(s.Fb.list));if(this.props.appointment&&this.props.appointment.treatmentID.indexOf(\"|\")>-1){const t=this.props.appointment.treatmentID.split(\"|\"),n=this.props.appointment.treatmentID,i=t[0],a=Object(r.r)(t[1]);e.push(new s.H({_id:n,expenses:a,type:i}))}return e}get canEdit(){return p.A.currentUser.canEditAppointments}setTimeFromCombination(){if(!this.props.appointment)return;12===this.timeComb.hours&&(this.timeComb.am=!0);const e=new Date(this.props.appointment.date);e.setHours(this.timeComb.am?this.timeComb.hours:this.timeComb.hours+12,Number(this.timeComb.minutes),0,0),this.props.appointment.date=e.getTime(),this.forceUpdate()}render(){const e=this.patientInsurance;return this.props.appointment?j.createElement(c.a,{isOpen:!!this.props.appointment,type:l.a.medium,closeButtonAriaLabel:\"Close\",isLightDismiss:!0,onDismiss:this.props.onDismiss,onRenderNavigation:()=>j.createElement(a.k,{className:\"panel-heading\"},j.createElement(a.c,{span:22},j.createElement(a.i,{secondaryElement:j.createElement(\"span\",null,Object(r.j)(this.props.appointment.date,s.xb.getSetting(\"date_format\")),\" \",\"/\",\" \",this.props.appointment&&this.props.appointment.treatment?this.props.appointment.treatment.type:\"\"),name:(this.props.appointment.patient||{name:\"\"}).name,size:3})),j.createElement(a.c,{span:2,className:\"close\"},j.createElement(h.a,{iconProps:{iconName:\"cancel\"},onClick:()=>{this.props.onDismiss()}})))},j.createElement(\"div\",{className:\"appointment-editor\"},j.createElement(a.l,{title:Object(p.z)(\"Appointment\")},j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:12},j.createElement(\"div\",{className:\"appointment-input date\"},j.createElement(d.a,{label:Object(p.z)(\"Date\"),disabled:!this.canEdit,className:\"appointment-date\",placeholder:Object(p.z)(\"Select a date\"),value:new Date(this.props.appointment.date),onSelectDate:e=>{e&&this.props.appointment.setDate(e.getTime())},formatDate:e=>Object(r.j)(e||0,s.xb.getSetting(\"date_format\"))}),j.createElement(\"p\",{className:\"insight\"},Object(p.z)(\"With\"),\" \",j.createElement(\"span\",{className:\"num-\"+this.otherAppointmentsNumber},this.otherAppointmentsNumber),\" \",Object(p.z)(\"other appointment\")))),j.createElement(a.c,{sm:12},j.createElement(\"div\",{className:\"appointment-input time\"},j.createElement(a.k,{gutter:12},j.createElement(u.a,null,Object(p.z)(\"Time\")),j.createElement(a.k,{gutter:0},j.createElement(a.c,{span:8},j.createElement(b.a,{options:[12,1,2,3,4,5,6,7,8,9,10,11].map(e=>({key:e.toString(),text:e<10?`0${e.toString()}`:e.toString()})),selectedKey:this.calcTime.hours.toString(),onChange:(e,t)=>{t&&(this.timeComb.hours=Number(t.key.toString()),this.setTimeFromCombination())}})),j.createElement(a.c,{span:8},j.createElement(b.a,{options:[\"00\",\"30\"].map(e=>({key:e,text:e})),selectedKey:this.calcTime.minutes,onChange:(e,t)=>{t&&(this.timeComb.minutes=t.key.toString(),this.setTimeFromCombination())}})),j.createElement(a.c,{span:8},j.createElement(b.a,{options:[{text:\"am\",key:\"am\"},{text:\"pm\",key:\"pm\"}],selectedKey:this.calcTime.am?\"am\":\"pm\",onChange:(e,t)=>{t&&(this.timeComb.am=\"am\"===t.key.toString(),this.setTimeFromCombination())}}))))))),j.createElement(\"div\",{className:\"appointment-input date\"},j.createElement(\"label\",null,Object(p.z)(\"Operating staff\"),\" \"),s.zb.list.filter(e=>e.operates).map(e=>{const t=this.props.appointment.staffID.indexOf(e._id)>-1;return j.createElement(E.a,{key:e._id,label:e.name,disabled:!this.canEdit||!t&&-1===e.onDutyDays.indexOf(new Date(this.props.appointment.date).toLocaleDateString(\"en-us\",{weekday:\"long\"})),checked:t,onChange:(t,n)=>{n?this.props.appointment.staffID.push(e._id):this.props.appointment.staffID.splice(this.props.appointment.staffID.indexOf(e._id),1),this.props.appointment.triggerUpdate++}})}))),j.createElement(a.l,{title:Object(p.z)(\"Case Details\")},j.createElement(g.a,{multiline:!0,disabled:!this.canEdit,label:Object(p.z)(\"Details\"),value:this.props.appointment.notes,onChange:(e,t)=>{this.props.appointment.notes=t}}),j.createElement(\"br\",null),j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:12},j.createElement(\"div\",{className:\"appointment-input treatment\"},j.createElement(b.a,{label:Object(p.z)(\"Treatment\"),disabled:!this.canEdit,className:\"treatment-type\",selectedKey:this.props.appointment.treatmentID,options:this.treatmentOptions.sort((e,t)=>e.type.localeCompare(t.type)).map(e=>({key:e._id,text:e.type})),onChange:(e,t)=>{this.props.appointment.treatmentID=t.key.toString()}}))),j.createElement(a.c,{sm:12},j.createElement(\"div\",{className:\"appointment-input units-number\"},j.createElement(g.a,{label:Object(p.z)(\"Units number\"),disabled:!this.canEdit,type:\"number\",value:this.props.appointment.units.toString(),onChange:(e,t)=>{this.props.appointment.units=Object(r.r)(t)}}))),j.createElement(a.c,{sm:24},j.createElement(\"div\",{className:\"appointment-input involved-teeth\"},j.createElement(g.a,{label:Object(p.z)(\"Procedure\"),disabled:!0,value:this.props.procedure.name}))),j.createElement(a.c,{span:24},\" \",j.createElement(\"div\",{className:\"appointment-input involved-teeth\"},j.createElement(a.n,{disabled:!this.canEdit,placeholder:Object(p.z)(\"Involved teeth\"),value:this.props.appointment.involvedTeeth.length&&this.props.appointment.involvedTeeth.map(e=>({key:e.toString(),text:e.toString()}))||this.props.procedure.tooth.map(e=>({key:e.toString(),text:e.toString()})),strict:!0,options:s.n.map(e=>({key:e.toString(),text:e.toString()})),formatText:e=>`${e.toString()} - ${Object(r.b)(Object(r.r)(e)).Palmer}`,onChange:e=>{this.props.appointment.involvedTeeth=e.map(e=>Object(r.r)(e.key))}})))),s.xb.getSetting(\"module_prescriptions\")?j.createElement(\"div\",null,j.createElement(\"hr\",{className:\"appointment-hr\"}),j.createElement(\"div\",{className:\"appointment-input prescription\"},j.createElement(a.n,{disabled:!this.canEdit,className:\"prescription\",value:this.props.appointment.prescriptions.map(e=>({key:e.id,text:e.prescription})),options:s.hb.list.map(this.prescriptionToTagInput),onChange:e=>{this.props.appointment.prescriptions=e.map(e=>({id:e.key,prescription:e.text}))},strict:!0,placeholder:Object(p.z)(\"Prescription\")})),j.createElement(\"div\",{id:\"prescription-items\"},j.createElement(\"div\",{className:\"print-heading\"},j.createElement(\"h2\",null,p.A.currentUser.name),j.createElement(\"hr\",null),j.createElement(\"h3\",null,\"Patient:\",\" \",(this.props.appointment.patient||new s.t).name),j.createElement(a.k,null,j.createElement(a.c,{span:12},j.createElement(\"h4\",null,\"Age:\",\" \",(this.props.appointment.patient||new s.t).age)),j.createElement(a.c,{span:12},j.createElement(\"h4\",null,\"Gender:\",\" \",(this.props.appointment.patient||new s.t).gender?\"Female\":\"Male\"))),j.createElement(\"hr\",null)),this.props.appointment.prescriptions.map(e=>j.createElement(a.k,{key:e.id},j.createElement(a.c,{span:20,className:\"m-b-5\"},j.createElement(a.j,{text:e.prescription.split(\":\")[0],onRenderInitials:()=>j.createElement(y.a,{iconName:\"pill\"}),subText:e.prescription.split(\":\")[1]})),j.createElement(a.c,{span:4,style:{textAlign:\"right\"}},this.canEdit?j.createElement(h.a,{iconProps:{iconName:\"delete\"},onClick:()=>{this.props.appointment.prescriptions=this.props.appointment.prescriptions.filter(t=>t.id!==e.id)}}):\"\")))),this.props.appointment.prescriptions.length?j.createElement(O.a,{onClick:print,iconProps:{iconName:\"print\"},text:Object(p.z)(\"Print prescription\")}):\"\"):\"\"),j.createElement(a.l,{title:Object(p.z)(\"Expenses & Price\")},j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:16},s.xb.getSetting(\"time_tracking\")?j.createElement(\"div\",{className:\"appointment-input time\"},j.createElement(\"label\",null,Object(p.z)(\"Time (hours, minutes, seconds)\")),j.createElement(g.a,{className:\"time-input hours\",type:\"number\",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).hours,onChange:(e,t)=>{this.timerInputs[0]=Object(r.r)(t),this.manuallyUpdateTime()}}),j.createElement(g.a,{className:\"time-input minutes\",type:\"number\",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).minutes,onChange:(e,t)=>{this.timerInputs[1]=Object(r.r)(t),this.manuallyUpdateTime()}}),j.createElement(g.a,{className:\"time-input seconds\",type:\"number\",disabled:!this.canEdit,value:this.formatMillisecondsToTime(this.props.appointment.time).seconds,onChange:(e,t)=>{this.timerInputs[2]=Object(r.r)(t),this.manuallyUpdateTime()}}),this.props.appointment.timer?j.createElement(S.a,{iconProps:{iconName:\"Timer\"},disabled:!this.canEdit,className:\"appendage stop\",text:Object(p.z)(\"Stop\"),onClick:()=>{const e=this.props.appointment.timer;e&&clearInterval(e),this.props.appointment.timer=null}}):j.createElement(S.a,{iconProps:{iconName:\"Timer\"},disabled:!this.canEdit,className:\"appendage\",text:Object(p.z)(\"Start\"),onClick:()=>{const e=s.K.getIndexByID(this.props.appointment._id),t=s.K.list[e];this.props.appointment.timer=window.setInterval(()=>{t.time=t.time+1e3},1e3)}}),j.createElement(\"p\",{className:\"payment-insight\"},j.createElement(a.m,{text:Object(p.z)(\"Time value\")+\": \"+s.xb.getSetting(\"currencySymbol\")+Object(r.s)(this.props.appointment.spentTimeValue).toString(),type:a.o.info}),j.createElement(\"br\",null),j.createElement(a.m,{text:Object(p.z)(\"Expenses\")+\": \"+s.xb.getSetting(\"currencySymbol\")+Object(r.s)(this.props.appointment.expenses).toString(),type:a.o.info}))):\"\"),j.createElement(a.c,{sm:24},j.createElement(\"div\",{className:\"appointment-input paid\"},j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:8},j.createElement(g.a,{type:\"number\",disabled:!this.canEdit,label:Object(p.z)(\"Price\"),value:this.props.procedure.fees.toString()||this.props.appointment.finalPrice.toString(),onChange:(e,t)=>{this.props.appointment.finalPrice=Object(r.r)(t)},prefix:s.xb.getSetting(\"currencySymbol\")})),j.createElement(a.c,{sm:8},j.createElement(g.a,{type:\"number\",disabled:!this.canEdit,label:Object(p.z)(\"Paid\"),value:this.props.appointment.paidAmount.toString(),onChange:(e,t)=>{this.props.appointment.paidAmount=Object(r.r)(t)},prefix:s.xb.getSetting(\"currencySymbol\")})),j.createElement(a.c,{sm:8},j.createElement(g.a,{type:\"number\",disabled:!0,label:this.props.appointment.outstandingAmount?Object(p.z)(\"Outstanding\"):this.props.appointment.overpaidAmount?Object(p.z)(\"Overpaid\"):Object(p.z)(\"Outstanding\"),value:this.props.appointment.outstandingAmount?this.props.appointment.outstandingAmount.toString():this.props.appointment.overpaidAmount?this.props.appointment.overpaidAmount.toString():this.props.appointment.outstandingAmount.toString(),prefix:s.xb.getSetting(\"currencySymbol\")}))),j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:8},j.createElement(g.a,{type:\"number\",disabled:!this.canEdit,label:Object(p.z)(\"Discount\"),value:this.props.appointment.discount.toString(),onChange:(e,t)=>{this.props.appointment.discount=Object(r.r)(t)},prefix:\"%\"})),e&&j.createElement(a.c,{sm:8},j.createElement(g.a,{type:\"number\",disabled:!0,label:Object(p.z)(`Insurance : ${e.name}`),value:e.discount.toString(),onChange:(e,t)=>{this.props.appointment.paidAmount=Object(r.r)(t)},prefix:\"%\"}))),j.createElement(\"p\",{className:\"payment-insight\"},j.createElement(a.m,{text:Object(p.z)(\"Profit\")+\": \"+s.xb.getSetting(\"currencySymbol\")+Object(r.s)(this.props.appointment.profit).toString(),type:a.o.success}),j.createElement(\"br\",null),j.createElement(a.m,{text:Object(p.z)(\"Profit percentage\")+\": \"+Object(r.s)(100*this.props.appointment.profitPercentage).toString()+\"%\",type:a.o.success}))))),j.createElement(a.k,{gutter:12},j.createElement(a.c,{sm:24},j.createElement(b.a,{label:Object(p.z)(\"Status\"),options:[\"Completed\",\"Not Completed\",\"In Processing\",\"Delayed\",\"Discontinued\"].map(e=>({key:e.toString(),text:e.toString()})),selectedKey:this.props.procedure?this.props.procedure.status:\"\",onChange:(e,t)=>{if(\"Completed\"===t.key.toString()?this.props.appointment.isDone=!0:this.props.appointment.isDone=!1,this.patient&&this.patient.procedures){const e=this.patient.procedures.map(e=>(e.id===this.props.appointment.procedureId&&(e.status=t.key.toString()),e));this.patient.procedures=e}this.props.appointment.status=t.key.toString()}})))),j.createElement(\"br\",null),this.canEdit?j.createElement(S.a,{className:\"delete\",iconProps:{iconName:\"delete\"},text:Object(p.z)(\"Delete\"),onClick:()=>{const e=this.props.appointment;s.K.deleteModal(e._id),this.props.onDelete()}}):\"\",j.createElement(\"br\",null),j.createElement(\"br\",null),j.createElement(\"br\",null))):j.createElement(\"div\",null)}formatMillisecondsToTime(e){const t=Math.floor(e/36e5),n=Math.floor(e%36e5/6e4),i=Math.floor(e%36e5%6e4/1e3);return{hours:a(t),minutes:a(n),seconds:a(i)};function a(e){return e>9?e.toString():\"0\"+e.toString()}}manuallyUpdateTime(){const e=this.timerInputs[0],t=this.timerInputs[1],n=this.timerInputs[2];isNaN(e)||isNaN(t)||isNaN(n)||(this.props.appointment.time=36e5*e+6e4*t+1e3*n)}prescriptionToTagInput(e){return{key:e._id,text:`${e.name}: ${e.doseInMg}${Object(p.z)(\"mg\")} ${e.timesPerDay}X${e.unitsPerTime} ${Object(p.z)(Object(s.Z)(e.form))}`}}};i.c([o.d],f.prototype,\"patient\",null),i.c([o.d],f.prototype,\"patientInsurance\",null),i.c([o.k],f.prototype,\"timerInputs\",void 0),i.c([o.k],f.prototype,\"timeComb\",void 0),i.c([o.d],f.prototype,\"calcTime\",null),i.c([o.d],f.prototype,\"otherAppointmentsNumber\",null),i.c([o.d],f.prototype,\"treatmentOptions\",null),i.c([o.d],f.prototype,\"canEdit\",null),f=i.c([m.a],f)}}]);","extractedComments":[]}